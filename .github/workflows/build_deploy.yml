---
name: build

on:
  pull_request:
  push:
    branches:
    - "!gh-pages"
    - "**"
    tags:
    - "v*"

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: '${{ matrix.os.name }}-${{ matrix.os.version }}'
    strategy:
      fail-fast: false
      matrix:
        os:
        - {name: ubuntu, version: latest}
        - {name: macos, version: latest}
        python-version: [3.7, 3.8, 3.9, '3.10.9', '3.11.1']

    steps:
    - name: Grab source
      uses: actions/checkout@v3.1.0

    - name: System, setup Python (${{ matrix.python-version }})
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: System, adjust the GITHUB_PATH
      run: |
        echo "$(python3 -m site --user-base)/bin" >> $GITHUB_PATH
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Yace, install
      run: |
        make dev-install

    - name: System, executable entry-points
      run: |
        yace --version
        black --version
        doxygen --version
        gcc --version
#        coverage --help

    - name: Yace, Emit
      run: |
        make emit

#     - name: Produce coverage report
#     run: |
#       make coverage
#       mv htmlcov output/

    - name: Upload generated sources and doxygen
      uses: actions/upload-artifact@v3.1.1
      with:
        name: 'archive-${{ matrix.os.name }}-${{ matrix.os.version }}-py${{ matrix.python-version }}'
        path: output/*
        if-no-files-found: error

#    - name: Publish Coveralls
#      if: (startsWith(github.ref, 'refs/tags/v') && (matrix.os.name == 'ubuntu') && (matrix.python-version == '3.7'))
#      uses: coverallsapp/github-action@master
#      with:
#        github-token: ${{ secrets.GITHUB_TOKEN }}
#        path-to-lcov: coverage.lcov

    - name: Publish Package
      if: (startsWith(github.ref, 'refs/tags/v') && (matrix.os.name == 'ubuntu') && (matrix.python-version == '3.7'))
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python3 setup.py sdist bdist_wheel
        twine upload dist/*
